<% content_for :head do %>
  <%= stylesheet_link_tag 'slider' %>
<% end %>

<div class="col-12 d-flex flex-column flex-md-row justify-content-between align-items-center mb-3">
  <h1 class="flex-grow-1">Dashboard</h1>
  <div class="d-flex">
    <div>
      <%= render partial: 'shared/modal_create', locals: { model: "person" } %>
    </div>
    <div>
      <%= render partial: 'shared/modal_create', locals: { model: "memory", model2: "people", size: "modal-xl" } %>
    </div>
      </div>
</div> 

<div class="d-flex flex-column flex-md-row justify-content-center">
  <div class="col">
    <div id="mapbox" class="min-vh-50" style='width: 100%; height: 95%; min-height: 600px;'></div>
  </div>
</div>

<body data-mapbox-token="<%= ENV['MAPBOX_PUBLIC_TOKEN'] %>" data-map-id="mapbox">

<script>

var mapbox = new mapboxgl.Map({
container: 'mapbox',
// Choose from Mapbox's core styles, or make your own style with Mapbox Studio
style: 'mapbox://styles/mapbox/light-v11',
center: [-90.96, -0.47],
zoom: 7.2
});
 
mapbox.on('load', () => {
mapbox.addSource('points', {
'type': 'geojson',
  'data': <%= raw @geojson.to_json %>
  });
// Add a circle layer
mapbox.addLayer({
'id': 'circle',
'type': 'circle',
'source': 'points',
'paint': {
'circle-color': '#4264fb',
'circle-radius': 8,
'circle-stroke-width': 2,
'circle-stroke-color': '#ffffff'
}
});
 
// Center the mapbox on the coordinates of any clicked circle from the 'circle' layer.
mapbox.on('click', 'circle', (e) => {
mapbox.flyTo({
center: e.features[0].geometry.coordinates
});
});
 
// Change the cursor to a pointer when the it enters a feature in the 'circle' layer.
mapbox.on('mouseenter', 'circle', () => {
mapbox.getCanvas().style.cursor = 'pointer';
});
 
// Change it back to a pointer when it leaves.
mapbox.on('mouseleave', 'circle', () => {
mapbox.getCanvas().style.cursor = '';
});
});
</script>
